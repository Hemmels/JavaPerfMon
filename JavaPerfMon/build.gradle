plugins {
	id 'application'
	id 'java'
	id 'eclipse'
	id 'java-library'
	// Gradle spring
	id "org.springframework.boot" version "2.3.2.RELEASE"
	id "io.spring.dependency-management" version "1.0.9.RELEASE"
	id "io.freefair.lombok" version "5.1.0"
	id 'nu.studer.jooq' version "4.2"
	id "com.moowork.node" version "1.3.1"
	id "org.siouan.frontend" version "3.0.1"
}

repositories {
	jcenter()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

allprojects {
	group = "com.hemmels"
	version = "1.0"
	sourceCompatibility = 11
	
    apply plugin: "java"
    apply plugin: "eclipse"
    apply plugin: 'java-library'
	apply plugin: "org.springframework.boot"
	apply plugin: "io.freefair.lombok"
	apply plugin: "io.spring.dependency-management"
}
	
subprojects {
    repositories {
    	jcenter()
    	mavenLocal()
        mavenCentral()
    }
    
	apply plugin: 'io.freefair.lombok'

	dependencies {
		annotationProcessor 'org.projectlombok:lombok'
		
		// This contains Junit5, AssertJ and Mockito.
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		
		// Used for @Data
		compileOnly 'org.projectlombok:lombok'

	}

	sourceSets {
		main {
			java {
				srcDir 'src/main/java'
				srcDir 'src/test/java'
			}
		}
	}
}

project(":JavaPerfMonApp") {
	dependencies {
		api project(':JavaPerfMonGen')
		// https://mvnrepository.com/artifact/org.springframework/spring-web
		implementation group: 'org.springframework', name: 'spring-web', version: '5.2.8.RELEASE'
	}
}

dependencies {
	api platform('org.springframework.boot:spring-boot-dependencies:2.3.2.RELEASE')
	implementation project(':JavaPerfMonApp')
	implementation project(':JavaPerfMonGen')
	implementation project(':reactapp')
	// api project(':JavaPerfMonReact')
	annotationProcessor 'org.projectlombok:lombok'

	// https://mvnrepository.com/artifact/org.mock-server/mockserver-junit-jupiter
	testImplementation group: 'org.mock-server', name: 'mockserver-junit-jupiter', version: '5.11.1'
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0-M1'
	// https://mvnrepository.com/artifact/simple-jndi/simple-jndi
	testImplementation group: 'simple-jndi', name: 'simple-jndi', version: '0.11.4.1'

}

tasks.register('processFrontendResources', Copy) {
    // Directory containing the artifacts in the frontend project, we can "npm run copybuild" in the reactapp project 
	// to get this moved here for us.
    def frontendBuildDir = file("frontendbuild")
    // Directory where the frontend artifacts must be copied to be packaged alltogether with the backend by the 'war'
    // plugin.
    def frontendResourcesDir = file("${project.buildDir}/resources/main/public")

    group 'Frontend'
    description 'Process frontend resources'
	// We aren't importing the frontend project just yet.
    //dependsOn project(':frontend').tasks.named('assembleFrontend')

    from frontendBuildDir
    into frontendResourcesDir
}

tasks.named('processResources') {
    dependsOn tasks.named('processFrontendResources')
}

test {
	useJUnitPlatform()
}

bootJar {
	mainClassName = 'com.hemmels.javaperfmon.application.Application'
}

bootRun {
	mainClassName = 'com.hemmels.javaperfmon.application.Application'
}