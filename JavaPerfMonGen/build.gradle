plugins {
	id 'java'
	id 'eclipse'
	id 'nu.studer.jooq'
}

repositories {
	jcenter()
	maven {
		url 'https://plugins.gradle.org/m2/'
	}
}
	
group = 'com.hemmels'
version = '1.0'
sourceCompatibility = 11

dependencies {
	// https://mvnrepository.com/artifact/org.jooq/jooq
	implementation group: 'org.jooq', name: 'jooq', version: '3.13.3'
	jooqRuntime 'mysql:mysql-connector-java:8.0.+'
}

eclipse {
	project {
		buildCommands.clear();
		buildCommand 'org.eclipse.jdt.core.javabuilder'
		buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
		buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
		buildCommand 'org.jboss.tools.jst.web.kb.kbbuilder'
		buildCommand 'org.eclipse.wst.validation.validationbuilder'
	}
	classpath {
		//customizing the classes output directory:
		defaultOutputDir = file('build')
	
		//default settings for downloading sources and Javadoc:
		downloadSources = false
		downloadJavadoc = false
	}
}

jooq {
	perfmon(sourceSets.main) {
		jdbc {
			driver = 'com.mysql.cj.jdbc.Driver'
			url = 'jdbc:mysql://localhost:3306/perfmon?autoReconnect=true&useSSL=false'
			user = 'testuser'
			password = 'test123!'
			properties {
				property {
					key = 'ssl'
					value = 'true'
				}
			}
		}
		generator {
			name = 'org.jooq.codegen.JavaGenerator'
			strategy {
				name = 'org.jooq.codegen.DefaultGeneratorStrategy'
			}
			database {
				forcedTypes {
					forcedType {
						includeExpression = 'enabled'
						name = 'BOOLEAN'
					}
				}
				name = 'org.jooq.meta.mysql.MySQLDatabase'
				inputSchema = 'perfmon'
				// INCLUDES here
				includes = 'endpoint'
				outputSchemaToDefault = true
			}
			generate {
				relations = true
				deprecated = false
				records = true
				immutablePojos = false
				fluentSetters = true
				daos = true
				// ...
			}
			target {
				packageName = ''
				directory = 'src/main/gen'
			}
		}
	}
}

// Ensures we don't look for a mainclass
bootJar {
	enabled = false
}